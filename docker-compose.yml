services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: blog-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: blogdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - blog-network

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: blogdb
      PORT: 8081
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    networks:
      - blog-network

  # Post Service
  post-service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    container_name: post-service
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: blogdb
      PORT: 8082
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    networks:
      - blog-network

  # Comment Service
  comment-service:
    build:
      context: ./comment-service
      dockerfile: Dockerfile
    container_name: comment-service
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: blogdb
      PORT: 8083
    ports:
      - "8083:8083"
    depends_on:
      - postgres
    networks:
      - blog-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog-frontend
    ports:
      - "8080:80"
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge

volumes:
  postgres_data: